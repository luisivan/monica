// Generated by IcedCoffeeScript 108.0.9
(function() {
  var Gallery, iced, q, __iced_k, __iced_k_noop,
    __slice = [].slice;

  iced = {
    Deferrals: (function() {
      function _Class(_arg) {
        this.continuation = _arg;
        this.count = 1;
        this.ret = null;
      }

      _Class.prototype._fulfill = function() {
        if (!--this.count) {
          return this.continuation(this.ret);
        }
      };

      _Class.prototype.defer = function(defer_params) {
        ++this.count;
        return (function(_this) {
          return function() {
            var inner_params, _ref;
            inner_params = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
            if (defer_params != null) {
              if ((_ref = defer_params.assign_fn) != null) {
                _ref.apply(null, inner_params);
              }
            }
            return _this._fulfill();
          };
        })(this);
      };

      return _Class;

    })(),
    findDeferral: function() {
      return null;
    },
    trampoline: function(_fn) {
      return _fn();
    }
  };
  __iced_k = __iced_k_noop = function() {};

  q = 4;

  Gallery = (function() {
    function Gallery() {
      var i, imgs, ___iced_passed_deferral, __iced_deferrals, __iced_k;
      __iced_k = __iced_k_noop;
      ___iced_passed_deferral = iced.findDeferral(arguments);
      imgs = $('#gallery figure');
      this.items = [];
      (function(_this) {
        return (function(__iced_k) {
          var _i;
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/user/dev/playground/monica/gallery.iced",
            funcname: "Gallery"
          });
          for (i = _i = 0; 0 <= q ? _i < q : _i > q; i = 0 <= q ? ++_i : --_i) {
            _this.addImg(i, __iced_deferrals.defer({
              lineno: 9
            }));
          }
          __iced_deferrals._fulfill();
        });
      })(this)((function(_this) {
        return function() {
          return $('#gallery').masonry({
            itemSelector: 'figure',
            columnWidth: '.grid-item',
            gutter: 10
          });
        };
      })(this));
    }

    Gallery.prototype.addImg = function(i, cb) {
      var el, img;
      el = $("<figure class='grid-item' itemprop='associatedMedia' itemscope itemtype='http://schema.org/ImageObject'> <a href='imgs/" + i + ".jpg' itemprop='contentUrl'> <img src='imgs/" + i + "-preview.jpg' itemprop='thumbnail' alt='Image description' /> </a> <figcaption itemprop='caption description'>Image caption</figcaption> </figure>");
      img = new Image();
      img.onload = (function(_this) {
        return function() {
          _this.items.push({
            src: el.find('a').attr('href'),
            w: img.width,
            h: img.height,
            title: el.find('figcaption').text(),
            msrc: el.find('img').attr('src')
          });
          el.on('click', function(e) {
            e.preventDefault();
            return _this.show($(el));
          });
          el.data('pswp-uid', _this.items.length - 1);
          $('#gallery').append(el);
          return cb();
        };
      })(this);
      return img.src = "imgs/" + i + ".jpg";
    };

    Gallery.prototype.show = function(el) {
      var gallery, opts;
      opts = {
        index: parseInt($(el).data('pswp-uid')),
        getThumbBoundsFn: (function(_this) {
          return function(i) {
            var pageYScroll, rect, thumbnail;
            thumbnail = el.find('img')[0];
            pageYScroll = window.pageYOffset || document.documentElement.scrollTop;
            rect = thumbnail.getBoundingClientRect();
            return {
              x: rect.left,
              y: rect.top + pageYScroll,
              w: rect.width
            };
          };
        })(this)
      };
      gallery = new PhotoSwipe($('.pswp')[0], PhotoSwipeUI_Default, this.items, opts);
      return gallery.init();
    };

    return Gallery;

  })();

  new Gallery();

}).call(this);
